Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Join:
          - "-"
          - - Ref: "AWS::StackName"
            - Ref: "AWS::Region"
            - Ref: "AWS::AccountId"
      AccessControl: Private
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - HEAD
            AllowedOrigins:
              - "*"
      LifecycleConfiguration:
        Rules:
          - Id: AbortIncompleteMultipartUpload
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7  # Abort incomplete multipart uploads after 7 days

  S3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: S3Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt: ["InstanceRole", "Arn"]
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:ListBucket
            Resource:
              - Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: "S3Bucket"
              - Fn::Join:
                  - ""
                  - - "arn:aws:s3:::"
                    - Ref: "S3Bucket"
                    - "/*"

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: InstanceRole

option_settings:
  # Elastic Beanstalk environment settings
  aws:elasticbeanstalk:application:environment:
    AWS_BUCKET_NAME:
      Ref: S3Bucket
    AWS_S3_REGION_NAME:
      Ref: "AWS::Region"
    AWS_S3_CUSTOM_DOMAIN:
      Fn::Join:
        - ""
        - - Ref: "S3Bucket"
          - ".s3."
          - Ref: "AWS::Region"
          - ".amazonaws.com"
    USE_S3: "True"

  # Apply the instance profile to the EC2 instances
  aws:autoscaling:launchconfiguration:
    IamInstanceProfile:
      Ref: InstanceProfile
